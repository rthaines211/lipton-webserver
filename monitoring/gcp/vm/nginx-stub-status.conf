#=============================================================================
# NGINX Stub Status Configuration
#
# This configuration snippet enables the stub_status module which exposes
# basic NGINX metrics for prometheus-nginx-exporter to scrape.
#
# Installation:
#   1. Add this configuration to your NGINX setup
#   2. Reload NGINX: sudo systemctl reload nginx
#   3. Test: curl http://localhost/nginx_status
#
# Security:
#   - Only accessible from localhost (127.0.0.1)
#   - No authentication required (internal only)
#   - Not exposed to public internet
#
#=============================================================================

# Stub status endpoint (internal only, for nginx-prometheus-exporter)
# Listen on all interfaces but restrict access to localhost and Docker bridge
server {
    # Listen on all interfaces (needed for Docker containers to access via host.docker.internal)
    listen 0.0.0.0:8081;
    server_name localhost;

    # Stub status endpoint
    location /nginx_status {
        # Enable stub_status module
        stub_status on;

        # Disable access logging for this endpoint (reduce noise)
        access_log off;

        # Allow access from localhost and Docker networks
        allow 127.0.0.1;
        allow 172.16.0.0/12;  # Docker networks (covers 172.16-172.31)
        deny all;
    }

    # Health check for nginx-exporter
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

#=============================================================================
# INTEGRATION INSTRUCTIONS
#=============================================================================
#
# Option 1: Include in main nginx.conf
#   Add to /etc/nginx/nginx.conf in the http {} block:
#     include /etc/nginx/conf.d/stub-status.conf;
#
# Option 2: Add to sites-available
#   1. Copy this file to: /etc/nginx/sites-available/stub-status
#   2. Create symlink: sudo ln -s /etc/nginx/sites-available/stub-status /etc/nginx/sites-enabled/
#   3. Test config: sudo nginx -t
#   4. Reload: sudo systemctl reload nginx
#
# Option 3: Add directly to existing server block
#   Add the /nginx_status location block to your existing
#   docs.liptonlegal.com server configuration
#
#=============================================================================
# VERIFICATION
#=============================================================================
#
# Test that stub_status is working:
#   curl http://127.0.0.1:8081/nginx_status
#
# Expected output:
#   Active connections: 1
#   server accepts handled requests
#    123 123 456
#   Reading: 0 Writing: 1 Waiting: 0
#
# Test from nginx-exporter container:
#   docker exec nginx-exporter wget -qO- http://host.docker.internal:8081/nginx_status
#
#=============================================================================
# METRICS EXPOSED
#=============================================================================
#
# stub_status provides these metrics (exported by nginx-prometheus-exporter):
#
# - nginx_connections_active: Number of active connections
# - nginx_connections_reading: Connections reading request
# - nginx_connections_writing: Connections writing response
# - nginx_connections_waiting: Idle connections waiting for request
# - nginx_http_requests_total: Total HTTP requests
# - nginx_connections_accepted: Total accepted connections
# - nginx_connections_handled: Total handled connections
#
#=============================================================================
