# Docker Compose for Local Monitoring Stack
#
# This stack includes:
# - Prometheus: Metrics collection and storage
# - Grafana: Metrics visualization and dashboards
#
# Usage:
#   cd monitoring
#   docker-compose up -d          # Start in background
#   docker-compose logs -f         # View logs
#   docker-compose down            # Stop and remove containers
#   docker-compose down -v         # Stop and remove containers + volumes
#
# Access:
#   Prometheus: http://localhost:9090
#   Grafana:    http://localhost:3001 (admin/admin)

version: '3.8'

services:
  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped

    ports:
      - "9090:9090"

    volumes:
      # Configuration files
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts:/etc/prometheus/alerts:ro

      # Data persistence
      - ./data/prometheus:/prometheus

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

    networks:
      - monitoring

    # Add extra_hosts for Mac/Windows to access host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped

    ports:
      - "3001:3000"

    environment:
      # Security settings
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ALLOW_EMBEDDING=true

      # Server settings
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_SERVER_SERVE_FROM_SUB_PATH=false

      # Anonymous access (for development only)
      - GF_AUTH_ANONYMOUS_ENABLED=false

      # Disable analytics
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false

      # Feature toggles
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards

    volumes:
      # Data persistence
      - ./data/grafana:/var/lib/grafana

      # Provisioning (automatic datasource and dashboard setup)
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro

    networks:
      - monitoring

    depends_on:
      - prometheus

    # Health check
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  monitoring:
    driver: bridge
    name: monitoring-network

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
